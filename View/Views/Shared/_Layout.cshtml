@{
    View.Controllers.HomeController context = new View.Controllers.HomeController();
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Nick Hulley</title>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css">
    @Styles.Render("~/css/css")
</head>
<body class="p-0">
    @section scripts {
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/popper")
        @Scripts.Render("~/bundles/bootstrap")
        @Scripts.Render("~/bundles/mdb")
    }
    @RenderSection("scripts", required: true)
    <script>
        var config = {};
        config.useIds = false;
    </script>
    <!-- Navbar -->
    <nav class="navbar fixed-top navbar-expand-lg navbar-dark scrolling-navbar">
        <div class="container">

            <!-- Brand -->
            <a class="navbar-brand" style="color:white; font-weight:bold;">
                <strong>Nick Hulley</strong>
            </a>

            <!-- Collapse -->
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <!-- Links -->
            <div class="collapse navbar-collapse" id="navbarSupportedContent">

                <!-- Left -->
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item @if (View.Controllers.HomeController.currentPage == "Home")
                    { @:active
                        }">
                        @Html.ActionLink("Home", "Index", "Home", new { @class = "waves nav-link" })
                    </li>
                    @if (Session["validUser"] != null)
                    {
                        if (((UserWSService.UserWSDTO)Session["validUser"]).UserLevel >= 3)
                        {
                            <li class="nav-item @if (View.Controllers.HomeController.currentPage == "Admin")
                            { @:active
                        }">
                                @Html.ActionLink("Admin", "Admin", "Home", new { @class = "waves nav-link" })
                            </li>
                        }
                        <li class="nav-item @if (View.Controllers.HomeController.currentPage == "Search")
                        { @:active
                        }">
                            @Html.ActionLink("Search", "Search", "Home", new { @class = "waves nav-link" })
                        </li>
                        <li class="nav-item @if (View.Controllers.HomeController.currentPage == "Borrowed")
                        { @:active
                        }">
                            @Html.ActionLink("Borrowed", "Borrowed", "Home", new { @class = "waves nav-link" })
                        </li>
                        <li class="nav-item @if (View.Controllers.HomeController.currentPage == "Reserved")
                        { @:active
                        }">
                            @Html.ActionLink("Reserved", "Reserved", "Home", new { @class = "waves nav-link" })
                        </li>

                        <li class="nav-item">
                            @Html.ActionLink("Sign out", "Signout", "User", new { @class = "waves nav-link " })
                        </li>
                    }

                </ul>

            </div>

        </div>
    </nav>

    <div class="min-vh-100 d-flex justify-content-center align-items-center  full-page-intro mt-0 " style="background-image: url('@(Url.Content("~/img/Swoosh.jpg"))'); background-repeat: no-repeat; background-size: cover;">
        <div class="mask rgba-black-light d-flex justify-content-center align-items-center w-100 min-vh-100">

            <!-- Content -->
            <div class="container">
                @RenderBody()
            </div>
            <!-- Content -->

        </div>
        <!-- Mask & flexbox options-->
    </div>
    <!--Footer-->
    <footer class="page-footer text-center font-small wow fadeIn">

        <!--Copyright-->
        <div class="footer-copyright py-3">
            © 2019 Copyright: <a href="https://nick-hulley.com" target="_blank">Nick Hulley</a>
        </div>
        <!--/.Copyright-->

    </footer>
    <!--/.Footer-->

        @{if (context.UserLoggedIn())
            {
                <script>
            $.ajax({
                type: 'POST',
                url: "@Url.Action("GetGenres", "Home")",
                datatype: "html",
                success: function (data) {
                    console.log(data);
                    $(".genres").html(`<option value="" disabled="" selected="">Genre</option>`);
                    var inputString = '';
                    for (let i = 0; i < data.Response.length; i++) {
                $(".genres").append(`<option value="${config.useIds ?  data.Response[i].GID : data.Response[i].GenreTitle}">${data.Response[i].GenreTitle}</option>`);
                }
                   },
                fail: function (xhr, textStatus, errorThrown) {
                        alert('Failed to get Genres from Database');
                    }
             });

             $.ajax({
                type: 'POST',
                url: "@Url.Action("GetDirectors", "Home")",
                datatype: "html",
                success: function (data) {
                    console.log(data);
                    $(".directors").html(`<option value="" disabled="" selected="">Director</option>`);
                    var inputString = '';
                    for (let i = 0; i < data.Response.length; i++) {
                        $(".directors").append(`<option value="${config.useIds ?  data.Response[i].DID : data.Response[i].DirectorName}">${data.Response[i].DirectorName}</option>`);
                    }
                },
                fail: function (xhr, textStatus, errorThrown) {
                    alert('Failed to get Directors from Database');
                }
             });

             $.ajax({
                type: 'POST',
                url: "@Url.Action("GetLanguages", "Home")",
                datatype: "html",
                success: function (data) {
                    console.log(data);
                    $(".languages").html(`<option value="" disabled="" selected="">Language</option>`);
                    var inputString = '';
                    for (let i = 0; i < data.Response.length; i++) {
                        $(".languages").append(`<option value="${config.useIds ? data.Response[i].LID : data.Response[i].LanguageName}">${data.Response[i].LanguageName}</option>`);
                    }
                },
                fail: function (xhr, textStatus, errorThrown) {
                    alert('Failed to get Languages from Database');
                }
              });
                </script>
                }
            }



</body>
</html>
